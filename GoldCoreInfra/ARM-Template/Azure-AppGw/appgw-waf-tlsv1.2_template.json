{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string"
        },
        "applicationGatewayName": {
            "type": "string"
        },
        "tier": {
            "type": "string"
        },
        "skuSize": {
            "type": "string"
        },
        "capacity": {
            "type": "int",
            "defaultValue": 2
        },
        "subnetName": {
            "type": "string"
        },
        "zones": {
            "type": "array"
        },
        "demopfx_data": {
            "type": "string"
        },
        "demopfx_password": {
            "type": "securestring"
        },
        "vnetaddress": {
            "type": "string"
        },
        "Environment": {
            "type": "string"
        }
    },
    "variables": {
        "subnetRef": "[concat(parameters('vnetaddress'), '/subnets/', parameters('subnetName'))]",
        "applicationGatewayId": "[resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName'))]"
    },
    "resources": [
        {
            "name": "[parameters('applicationGatewayName')]",
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2019-09-01",
            "location": "[parameters('location')]",
            "zones": "[parameters('zones')]",
            "dependsOn": [],
            "tags": {
                "Application Name": "NCS-DataLake-GC",
                "Application Owner": "Neelima Vykuntham",
                "Environment": "[parameters('Environment')]"
            },
            "properties": {
                "sku": {
                    "name": "[parameters('skuSize')]",
                    "tier": "[parameters('tier')]",
                    "capacity": "[parameters('capacity')]"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "appGwPrivateFrontendIp",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "port_443",
                        "properties": {
                            "Port": 443
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "webpool",
                        "properties": {
                            "backendAddresses": []
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "httpsetting",
                        "properties": {
                            "Port": 80,
                            "Protocol": "Http",
                            "cookieBasedAffinity": "Disabled",
                            "requestTimeout": 20
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "httpslistner",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('applicationGatewayId'), '/frontendIPConfigurations/appGwPrivateFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(variables('applicationGatewayId'), '/frontendPorts/port_443')]"
                            },
                            "protocol": "Https",
                            "sslCertificate": {
                                "id": "[concat(variables('applicationGatewayId'), '/sslCertificates/demopfx')]"
                            }
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "Name": "httpsrule",
                        "properties": {
                            "RuleType": "Basic",
                            "httpListener": {
                                "id": "[concat(variables('applicationGatewayId'), '/httpListeners/httpslistner')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/webpool')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/httpsetting')]"
                            }
                        }
                    }
                ],
                "enableHttp2": false,
                "sslCertificates": [
                    {
                        "name": "demopfx",
                        "properties": {
                            "data": "[parameters('demopfx_data')]"
                            }
                    }
                ],
				"sslPolicy": {
          "policyType": "Custom",
          "minProtocolVersion": "TLSv1_2",
          "cipherSuites": [
            "TLS_RSA_WITH_AES_256_CBC_SHA256",
            "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
            "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
            "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
            "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
            "TLS_RSA_WITH_AES_128_GCM_SHA256",
            "TLS_RSA_WITH_AES_128_CBC_SHA256"
          ]
        },
                "probes": [],
                "webApplicationFirewallConfiguration": {
                    "enabled": true,
                    "firewallMode": "Prevention",
                    "ruleSetType": "OWASP",
                    "ruleSetVersion": "3.0"
                }
            }
        }
        
    ]
    
}
